name: Netlify Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Use cached node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            nodeModules-

      - name: Check is playlist
        uses: actions/github-script@v2
        id: is-playlist
        env:
          GATSBY_TV_PLAYER_URL: ${{ secrets.GATSBY_TV_PLAYER_URL }}
        with:
          result-encoding: string
          script: |
            const response = await github.request(process.env.GATSBY_TV_PLAYER_URL);
            const isPlaylist = response.data.includes('//uma.media/playlist/');
            console.log('isPlaylist =', isPlaylist);
            return isPlaylist;

      - name: Deploy to Netlify
        uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_MESSAGE: 'Prod deploy v${{ github.ref }}'
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: './public'
          install_command: yarn install --frozen-lockfile
          build_command: yarn build
        env:
          GATSBY_HOSTNAME: ${{ secrets.GATSBY_HOSTNAME }}
          GATSBY_TV_PLAYER_URL: ${{ secrets.GATSBY_TV_PLAYER_URL }}
          GATSBY_TV_PLAYER_IS_PLAYLIST: ${{ steps.is-playlist.outputs.result }}
